/*
Highly Optimized Object-oriented Many-particle Dynamics -- Blue Edition
(HOOMD-blue) Open Source Software License Copyright 2009-2014 The Regents of
the University of Michigan All rights reserved.

HOOMD-blue may contain modifications ("Contributions") provided, and to which
copyright is held, by various Contributors who have granted The Regents of the
University of Michigan the right to modify and/or distribute such Contributions.

You may redistribute, use, and create derivate works of HOOMD-blue, in source
and binary forms, provided you abide by the following conditions:

* Redistributions of source code must retain the above copyright notice, this
list of conditions, and the following disclaimer both in the code and
prominently in any materials provided with the distribution.

* Redistributions in binary form must reproduce the above copyright notice, this
list of conditions, and the following disclaimer in the documentation and/or
other materials provided with the distribution.

* All publications and presentations based on HOOMD-blue, including any reports
or published results obtained, in whole or in part, with HOOMD-blue, will
acknowledge its use according to the terms posted at the time of submission on:
http://codeblue.umich.edu/hoomd-blue/citations.html

* Any electronic documents citing HOOMD-Blue will link to the HOOMD-Blue website:
http://codeblue.umich.edu/hoomd-blue/

* Apart from the above required attributions, neither the name of the copyright
holder nor the names of HOOMD-blue's contributors may be used to endorse or
promote products derived from this software without specific prior written
permission.

Disclaimer

THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDER AND CONTRIBUTORS ``AS IS'' AND
ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, AND/OR ANY
WARRANTIES THAT THIS SOFTWARE IS FREE OF INFRINGEMENT ARE DISCLAIMED.

IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE
OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
*/

/*! \page page_box Periodic boundary conditions

Table of contents:
 - \ref sec_triclinic_intro
 - \ref sec_triclinic_definition
 - \ref sec_triclinic_specify
 - \ref sec_triclinic_update

\section sec_triclinic_intro Introduction

All simulations executed in HOOMD-blue occur in a triclinic simulation box with periodic boundary conditions in all
three directions. A triclinic box is defined by six values: the extents \f$L_x\f$, \f$L_y\f$ and \f$L_z\f$ of the box
in the three directions, and three tilt factors \f$xy\f$, \f$xz\f$ and \f$yz\f$.

The parameter matrix \f$\mathbf{h}\f$ is defined in terms of the lattice vectors
\f$ \vec a_1 \f$, \f$ \vec a_2 \f$ and \f$ \vec a_3 \f$:
\f[ \mathbf{h} \equiv \left( \vec a_1, \vec a_2, \vec a_3 \right). \f]
By convention, the first lattice vector
\f$ \vec a_1 \f$ is parallel to the unit vector \f$ \vec e_x = (1,0,0) \f$. The tilt factor
\f$ xy \f$ indicates how the second lattice vector \f$ \vec a_2\f$ is tilted with respect to the first one. It specifies
many units along the x-direction correspond to one unit of the second lattice vector. Similarly, \f$ xz \f$ and
\f$ yz \f$ indicate the tilt of the third lattice vector \f$ \vec a_3 \f$ with respect to the first and second lattice
vector.

\section sec_triclinic_definition Definitions and formulas for the cell parameter matrix
The full cell parameter matrix is
\f{eqnarray*}{
\mathbf{h}& =& \left(\begin{array}{ccc} L_x & xy L_y & xz L_z \\
                                        0   & L_y    & yz L_z \\
                                        0   & 0      & L_z    \\
                     \end{array}\right)
\f}

The tilt factors \f$ xy \f$, \f$ xz \f$ and \f$ yz \f$ are dimensionless.
The relationships between the tilt factors and the box angles \f$ \alpha \f$,
\f$ \beta \f$ and \f$ \gamma \f$ are as follows:
\f{eqnarray*}{
\cos\gamma \equiv \cos(\angle\vec a_1, \vec a_2) &=& \frac{xy}{\sqrt{1+xy^2}}\\
\cos\beta \equiv \cos(\angle\vec a_1, \vec a_3) &=& \frac{xz}{\sqrt{1+xz^2+yz^2}}\\
\cos\alpha \equiv \cos(\angle\vec a_2, \vec a_3) &=& \frac{xy*xz + yz}{\sqrt{1+xy^2} \sqrt{1+xz^2+yz^2}} \\
\f}

Given an arbitrarily oriented lattice with box vectors \f$ \vec v_1, \vec v_2, \vec v_3 \f$, the HOOMD-blue
box parameters for the rotated box can be found as follows.
\f{eqnarray*}{
L_x &=& v_1\\
a_{2x} &=& \frac{\vec v_1 \cdot \vec v_2}{v_1}\\
L_y &=& \sqrt{v_2^2 - a_{2x}^2}\\
xy &=& \frac{a_{2x}}{L_y}\\
L_z &=& \vec v_3 \cdot \frac{\vec v_1 \times \vec v_2}{\left| \vec v_1 \times \vec v_2 \right|}\\
a_{3x} &=& \frac{\vec v_1 \cdot \vec v_3}{v_1}\\
xz &=& \frac{a_{3x}}{L_z}\\
yz &=& \frac{\vec v_2 \cdot \vec v_3 - a_{2x}a_{3x}}{L_x L_z}\\
\f}

Example:
~~~
# boxMatrix contains an arbitrarily oriented right-handed box matrix.
v[0] = boxMatrix[:,0]
v[1] = boxMatrix[:,1]
v[2] = boxMatrix[:,2]
Lx = numpy.sqrt(numpy.dot(v[0], v[0]))
a2x = numpy.dot(v[0], v[1]) / Lx
Ly = numpy.sqrt(numpy.dot(v[1],v[1]) - a2x*a2x)
xy = a2x / Ly
v0xv1 = numpy.cross(v[0], v[1])
v0xv1mag = numpy.sqrt(numpy.dot(v0xv1, v0xv1))
Lz = numpy.dot(v[2], v0xv1) / v0xv1mag
a3x = numpy.dot(v[0], v[2]) / Lx
xz = a3x / Lz
yz = (numpy.dot(v[1],v[2]) - a2x*a3x) / (Ly*Lz)
~~~

\section sec_triclinic_specify Initializing a system with a triclinic box

You can specify all parameters of a triclinic box in an \link page_xml_file_format XML file\endlink.

You can also pass a data.boxdim argument to the constructor of any initialization method. Here is an example for
\link hoomd_script.init.create_random_polymers init.create_random_polymers\endlink
~~~
init.create_random_polymers(box=data.boxdim(L=18, xy=0.1, xz=0.2, yz=0.3),
                            polymeres=[polymer2],
                            separation=dict(A=0.35, B=0.35));
~~~
This creates a triclinic box with edges of length 18, and tilt factors
\f$ xy =0.1 \f$, \f$ xz=0.2 \f$ and \f$ yz=0.3\f$.

You can also specify a 2D box to any of the initialization methods.
~~~
init.create_random(N=1000, box=data.boxdim(xy=1.0, volume=2000, dimensions=2), min_dist=1.0)
~~~

\section sec_triclinic_update Change the simulation box

The triclinic unit cell can be updated in various ways.

\subsection triclinic_resize Resizing the box

The simulation box can be gradually resized during a simulation run using
\link hoomd_script.update.box_resize update.box_resize \endlink.

To update the tilt factors continuously during the simulation (shearing
the simulation box with **Lees-Edwards** boundary conditions), use:
~~~
update.box_resize(xy = variant.linear_interp([(0,0), (1e6, 1)]))
~~~
This command applies shear in the \f$ xy \f$-plane so that the angle between the *x*-
and *y*-directions changes continuously from 0 to \f$45^\circ\f$ during \f$ 10^6 \f$ time steps.

\link hoomd_script.update.box_resize update.box_resize \endlink. Can change any or all of the six box parameters.

\subsection triclinic_npt NPT or NPH integration

In a constant pressure ensemble, the box is updated every time step, according to the anisotropic stresses in the
system. This is supported by

- \link hoomd_script.integrate.npt integrate.npt\endlink
- \link hoomd_script.integrate.nph integrate.nph\endlink

Anisotropic constant-pressure integration modes for <b>rigid bodies</b>
are not yet available in HOOMD-blue, but the tilt factors and box lengths
can still be set to any arbitrary value and are
preserved during the course of the NPT or NPH integration when using:

- \link hoomd_script.integrate.npt_rigid integrate.npt_rigid\endlink
- \link hoomd_script.integrate.nph_rigid integrate.nph_rigid\endlink

\subsection triclinic_other Other features
All other features of HOOMD-blue work with triclinic symmetry, including
\link page_mpi MPI\endlink simulations.

As for every rule, there is an exception.
- \link hoomd_script.dump.bin dump.bin\endlink (deprecated) has not been updated to work with triclinic
  boxes.
*/
